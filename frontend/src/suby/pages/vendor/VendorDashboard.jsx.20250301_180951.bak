import React, { useState, useEffect } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { API_URL } from '../../api';
import '../../styles/vendor.css';

const VendorDashboard = () => {
  const [vendor, setVendor] = useState(null);
  const [restaurants, setRestaurants] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');
  const navigate = useNavigate();

  useEffect(() => {
    const vendorInfo = localStorage.getItem('vendorInfo');
    const token = localStorage.getItem('vendorToken');

    if (!vendorInfo || !token) {
      navigate('/vendor/login');
      return;
    }

    setVendor(JSON.parse(vendorInfo));
    fetchVendorRestaurants(token);
  }, [navigate]);

  const fetchVendorRestaurants = async (token) => {
    try {
      const response = await fetch(`${API_URL}/api/restaurants/vendor/me`, {
        headers: {
          Authorization: `Bearer ${token}`
        }
      });

      if (!response.ok) {
        throw new Error('Failed to fetch restaurants');
      }

      const data = await response.json();
      setRestaurants(data);
    } catch (err) {
      setError(err.message);
    } finally {
      setLoading(false);
    }
  };

  const handleLogout = () => {
    localStorage.removeItem('vendorToken');
    localStorage.removeItem('vendorInfo');
    navigate('/vendor/login');
  };

  if (loading) {
    return (
      <div className="vendor-dashboard">
        <div className="loading">Loading...</div>
      </div>
    );
  }

  return (
    <div className="vendor-dashboard">
      <div className="dashboard-header">
        <h1>Vendor Dashboard</h1>
        <div className="dashboard-actions">
          <button onClick={handleLogout} className="logout-btn">Logout</button>
        </div>
      </div>

      <div className="dashboard-welcome">
        <h2>Welcome, {vendor?.businessName || 'Vendor'}!</h2>
      </div>

      {error && <div className="dashboard-error">{error}</div>}

      <div className="dashboard-section">
        <div className="section-header">
          <h3>Your Restaurants</h3>
          <Link to="/vendor/restaurants/add" className="add-btn">Add New Restaurant</Link>
        </div>

        {restaurants.length === 0 ? (
          <div className="empty-state">
            <p>You don't have any restaurants yet.</p>
            <Link to="/vendor/restaurants/add" className="add-btn">Add Your First Restaurant</Link>
          </div>
        ) : (
          <div className="restaurant-grid">
            {restaurants.map((restaurant) => (
              <div key={restaurant._id} className="restaurant-card">
                <div className="restaurant-image">
                  {restaurant.mainImage ? (
                    <img 
                      src={restaurant.mainImage.startsWith('http') 
                        ? restaurant.mainImage 
                        : `${API_URL}${restaurant.mainImage}`} 
                      alt={restaurant.name} 
                      onError={(e) => {
                        e.target.onerror = null;
                        e.target.src = 'https://via.placeholder.com/300x200?text=No+Image';
                      }}
                    />
                  ) : (
                    <img src="https://via.placeholder.com/300x200?text=No+Image" alt="Placeholder" />
                  )}
                </div>
                <div className="restaurant-details">
                  <h4>{restaurant.name}</h4>
                  <p>{restaurant.address.city}, {restaurant.address.state}</p>
                  <p>{restaurant.items?.length || 0} menu items</p>
                  <div className="restaurant-actions">
                    <Link to={`/vendor/restaurants/${restaurant._id}`} className="view-btn">Manage</Link>
                    <Link to={`/vendor/restaurants/${restaurant._id}/menu`} className="menu-btn">Menu</Link>
                  </div>
                </div>
              </div>
            ))}
          </div>
        )}
      </div>
    </div>
  );
};

export default VendorDashboard;